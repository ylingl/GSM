package mvc.login;

import java.io.File;

import javax.servlet.http.HttpServletRequest;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.servlet.ModelAndView;

import logic.login.LoginService;
import utils.ValidateCodeTools;

@Controller
public class LoginController {
	
	@Autowired
	@Qualifier("loginService")
	private LoginService loginService;

	@Autowired
	@RequestMapping("loginIndex")
	public ModelAndView loginIndex(){
		ModelAndView mav = new ModelAndView();
		mav.setViewName("login");
		return mav;
	}
	
	// 验证码
	@RequestMapping("/checkNumberShow")
	public ModelAndView checkNumberShow() {
		ModelAndView mav = new ModelAndView();
		mav.setViewName("checkNumber");
		return mav;
	}
	
	@RequestMapping("/userLogin")
	public ModelAndView userLogin(LoginInfo info, HttpServletRequest request){
		ModelAndView mav = new ModelAndView();
		String msg = "right";
		ValidateCodeTools validateCodeTools = new ValidateCodeTools();
		if(!validateCodeTools.check(info.getCheckNum(), request)){
			msg = "验证码错误";
		}
		else{
			String role = info.getRole();
			if(role.equals("admin")){
				if(info.getUsername().equals("1234") && info.getPassword().equals("1234")){
					mav.setViewName("redirect:/config/adminHomepage");
				}
				else{
					msg="角色错误";
				}
			}
			else if(loginService.validUserLoginInfo(info)){
				mav.setViewName("redirect:/map/mapIndex");
			}
			else{
				msg="用户名或密码错误";
			}
		}
		
		if(!msg.equals("right")){
			mav.addObject("username", info.getUsername());
			mav.addObject("password", info.getPassword());
			mav.addObject("msg", msg);
			mav.setViewName("login");
		}
		return mav;
	}
	
	@RequestMapping("test")
	public void test(MultipartFile file, String deviceName){
		 try {
			file.transferTo(new File("D:\\abc.xls"));
		} catch (Exception e) {
			e.printStackTrace();
		}
	    
		//设备编号，文件file
		//ANALYSIS analysis = new ANALYSIS();
		//analysis.setCreate_time(System.currentTimeMillis());
	}
}
