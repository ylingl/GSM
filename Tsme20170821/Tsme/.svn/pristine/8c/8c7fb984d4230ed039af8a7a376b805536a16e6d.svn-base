package mvc.account;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.servlet.ModelAndView;

import logic.register.RegisterService;
import tsme.table.supervisor.bean.SUPERVISOR;

@Controller
public class AccountController {
	@Autowired
	@Qualifier("registerService")
	private RegisterService registerService;
	
	@RequestMapping("/abc")
	public ModelAndView test(){
		ModelAndView mav = new ModelAndView();
		mav.setViewName("test");
		return mav;
	}
	
	@RequestMapping("/registerUser")
	public ModelAndView registerUser(){
		ModelAndView mav = new ModelAndView();
		SUPERVISOR su = new SUPERVISOR();
		su.setCreate_time(System.currentTimeMillis());
		su.setDepartment("管理部");
		su.setDepartment_id("001");
		su.setEmpno("02");
		su.setGender(false);
		su.setIntroduction("负责用户、模板和设备的导入");
		su.setName("小六六");
		su.setUsername("1234");
		su.setPassword("1234");
		
		int result = registerService.save(su);
		mav.addObject("result", result);
		mav.setViewName("register");
		return mav;
	}
	public  String getEncoding(String str) {
        String encode = "GB2312";
        try {
            if (str.equals(new String(str.getBytes(encode), encode))) {
                String s = encode;
                return s;
            }
        } catch (Exception exception) {
        }
        encode = "ISO-8859-1";
        try {
            if (str.equals(new String(str.getBytes(encode), encode))) {
                String s1 = encode;
                return s1;
            }
        } catch (Exception exception1) {
        }
        encode = "UTF-8";
        try {
            if (str.equals(new String(str.getBytes(encode), encode))) {
                String s2 = encode;
                return s2;
            }
        } catch (Exception exception2) {
        }
        encode = "GBK";
        try {
            if (str.equals(new String(str.getBytes(encode), encode))) {
                String s3 = encode;
                return s3;
            }
        } catch (Exception exception3) {
        }
        return "";
    }
	@RequestMapping("/targetRegister")
	public ModelAndView register(){
		ModelAndView mav = new ModelAndView();
		//SUPERVISOR su = new SUPERVISOR();
		mav.setViewName("register/targetregister");
		return mav;
	}
}
